# syntax=docker/dockerfile:1.0-experimental
#
# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Build an OpenShift image.
# Before running docker build, make sure
# 1. Your Docker version is >= 18.09.3
# 2. export DOCKER_BUILDKIT=1

ARG SPARK_IMAGE=gcr.io/spark-operator/spark:v3.1.1

FROM golang:1.20-alpine as builder

RUN apk update && apk add --no-cache libcap

WORKDIR /workspace

# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# Cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source code
COPY main.go main.go
COPY pkg/ pkg/

# Build
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o /usr/bin/spark-operator main.go
RUN setcap cap_net_bind_service=+ep /usr/bin/spark-operator

FROM ${SPARK_IMAGE}
USER root
RUN yum install -y openssl \
    && yum clean all \
    && curl -fsSL "https://github.com/krallin/tini/releases/download/v0.19.0/tini-static-amd64" -o /sbin/tini \
    && chmod +x /sbin/tini

# Comment out the following three lines if you do not have a RedHat subscription.
# COPY hack/install_packages.sh /
# RUN --mount=target=/opt/spark/credentials,type=secret,id=credentials,required /install_packages.sh
# RUN rm /install_packages.sh

# RUN chmod -R u+x /tmp

USER 185

COPY --from=builder /usr/bin/spark-operator /usr/bin/
COPY hack/gencerts.sh /usr/bin/

COPY entrypoint.sh /usr/bin/
ENTRYPOINT ["/usr/bin/entrypoint.sh"]